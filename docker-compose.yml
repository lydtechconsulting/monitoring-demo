services:
    zookeeper:
        image: confluentinc/cp-zookeeper:7.3.2
        hostname: zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    kafka:
        image: confluentinc/cp-kafka:7.3.2
        hostname: kafka
        container_name: kafka
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
            - "9093:9093"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://localhost:9092
            KAFKA_NUM_PARTITIONS: 3
            KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 3
            KAFKA_DEFAULT_REPLICATION_FACTOR: 1
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_MIN_INSYNC_REPLICAS: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        healthcheck:
            test: nc -z localhost 9092 || exit -1
            start_period: 15s
            interval: 5s
            timeout: 10s
            retries: 10

    kafka-exporter:
        image: danielqsj/kafka-exporter
        hostname: kafka-exporter
        container_name: kafka-exporter
        command: --kafka.server=kafka:9093
        ports:
            - 9308:9308
        depends_on:
            kafka:
              condition: service_healthy
        links:
            - kafka
            - prometheus

    postgres:
        container_name: postgres
        image: postgres:14.1-alpine
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=postgres
        ports:
            - '5432:5432'
        volumes:
            - postgres:/var/lib/postgresql/data

    postgres-exporter:
        image: prometheuscommunity/postgres-exporter
        ports:
            - 9187:9187
        environment:
            DATA_SOURCE_NAME: "postgresql://postgres:postgres@postgres:5432/postgres?sslmode=disable"
        links:
            - postgres
            - prometheus

    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        ports:
            - "9090:9090"
        depends_on:
#            - kafka
            - postgres

    grafana:
        image: grafana/grafana
        ports:
            - 3000:3000

volumes:
    postgres: {}
